/* style.scss  |  Simplified + Layered + DRY */
// WE DO NOT use Ui-anything as a prefix.  It is redundant.

/* ─────────── RESET ─────────── */
@layer reset, foundation, components, utilities;

@layer reset {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html,
  body {
    height: 100%;
    font-family: "Comic Sans MS", "Comic Sans", cursive;
    line-height: 1.4;
  }
}

/* ─────────── BASE ─────────── */
@layer foundation {
  :root {
    --rpx-base: 1rem;
    --radius-s: 0.25rem;
    --radius-m: 0.5rem;
    --radius-l: 1rem;

    --color-shartreuse: #a2ea2e;
    --color-bg-main: #fff;
    --color-bg-alt: #f4f6fa;

    --color-fg: #222;
    --color-border: #ddd;
    --color-primary: #4a90e2;
    --color-secondary: #888;
    --color-accent: #f5a623;
    --shadow-card: 0 1px 4px rgba(0, 0, 0, 0.1);

    --4rpx: 0.25rem;
    --8rpx: 0.5rem;
    --16rpx: 1rem;
    --24rpx: 1.5rem;
    --32rpx: 2rem;
    --48rpx: 3rem;
    --64rpx: 4rem;
    --128rpx: 8rem;
    --160rpx: 10rem;
    --192rpx: 12rem;
    --256rpx: 16rem;
    --312rpx: 20rem;
    --480rpx: 30rem;
  }

  /* $vars from chat???? 
$padding: var(--16rpx);
$gap: var(--16rpx);
$bg: var(--color-bg-main);
$align: flex-start;
$justify: flex-start; 
*/

  body {
    background-color: var(--color-bg-main);
    color: var(--color-fg);
  }

  h1,
  h2,
  h3 {
    font-weight: 600;
    margin-bottom: calc(var(--rpx-base) * 0.5);
  }

  a {
    color: var(--color-primary);
    text-decoration: none;
  }

  p {
  }

  /* H/V containers define direction */
  .hbox {
    display: flex;
    flex-direction: row;
    gap: var(--16rpx);
  }
  .vbox {
    display: flex;
    flex-direction: column;
    gap: var(--16rpx);
  }
}

/* ─────────── COMPONENTS ─────────── */
@layer components {
  /* Mixins */

  /* ─────────── MIXINS ─────────── */

  /* Base layout container */

  /* Buttons */
  button {
    flex: 0 0 auto; /* prevents flex parent from stretching the button */
    width: fit-content; /* size exactly to the content + padding */
    display: flex;
    align-items: center;
    justify-content: center;
    padding: calc(var(--rpx-base) * 0.75) calc(var(--rpx-base) * 1.25);
    border-radius: var(--radius-s);
    font-weight: 600;
    background-color: var(--color-shartreuse);
    cursor: pointer;
    transition: 0.2s ease background-color;
    border: none;

    .btn--primary {
      background: var(--color-primary);
      color: white;
    }
    .btn--secondary {
      background: var(--color-secondary);
      color: white;
    }
    .btn--outline {
      background: none;
      border: 2px solid var(--color-primary);
      color: var(--color-primary);
    }
    .btn--text {
      background: none;
      color: var(--color-primary);
    }

    &:hover {
      filter: brightness(0.9);
    }
  }

  /* Floorplan Layout */
  .floorplan {
    display: flex;
    flex-direction: column;
    height: 100vh;
    background: var(--color-bg-main);
    overflow: hidden;

    .column {
      @extend .vbox;
      min-width: 0; /* Prevent overflow in flex children */
      flex: 0 0 25%;
      gap: var(--16rpx);
      border-right: 1px solid var(--color-border);
      overflow-y: auto;
      background-color: var(--color-bg-alt);
    }
  }

  /* Card — visually elevated container */
  .card {
    display: flex;
    flex-direction: row;
    gap: var(--16rpx);
    background-color: var(--color-bg-main);

    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }
  }

  .card-ctnr {
    @extend .vbox;
    flex: 1 1 0rem;
    align-self: stretch;
    gap: var(--24rpx);
    overflow-y: scroll;
    scrollbar-gutter: auto; /* CSS modern fix for consistent layout */
  }

  .tile {
    display: flex;
    flex-direction: column;
    gap: var(--16rpx);
    background-color: var(--color-bg-main);
    &:hover {
      filter: brightness(0.9);
    }
  }

  /* Image placeholder — for product tiles or item details */
  .img-thumb {
    // I would like this extended to have 3 size options, rpx if possible.
    display: flex;
  }

  /* Stage / ActorTile */
  .stage {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    flex: 1;

    .solo {
      transform: scale(1.02);
      border: 2px solid var(--color-accent);
    }
  }

  /* ItemDetailsTile — Horizontal Flex Layout */
  .product-details {
    @extend .tile;
    width: var(--312rpx);
    flex-direction: row;
  }

  .catelog-image {
    flex: 0 0 auto;
    width: 96px;
    height: 96px;
    border-radius: var(--radius-s);
    object-fit: cover;
    box-shadow: var(--shadow-card);

    // this should have variable sizes.
  }

  /* ─────────── RETURN ITEMS ─────────── */
}

/* ─────────── UTILITIES ─────────── */
@layer utilities {
  .flex {
    display: flex;
  }
  .padding-8rpx {
    padding: var(--8rpx);
  }
  .padding-16rpx {
    padding: var(--16rpx);
  }
  .padding-24rpx {
    padding: var(--24);
  }
  .padding-32rpx {
    padding: var(--32rpx);
  }
  .gap-8rpx {
    gap: var(--8rpx);
  }

  /* Flex Sizing Utilities
     These utilities adapt automatically to both horizontal (row) and vertical (column) flex contexts.
     Use `.flex-grow-max` to make a flex child expand to fill available space (stretching along the cross-axis).
     Use `.flex-grow-min` to make a flex child shrink to its minimum size, aligned to the start.
  */
  .flex-grow-max {
    flex: 1 1 auto; /* Grow to fill available space, shrink if needed */
    align-self: stretch; /* Stretch along the cross-axis automatically */
  }

  .flex-grow-min {
    flex: 0 0 auto; /* Stay as small as possible */
    align-self: flex-start; /* Stick to natural size, aligned to start */
  }

  /* Main-axis Fill/Hug */
  .fill-main {
    flex: 1 1 auto;
  } /* fills along flex direction */
  .hug-main {
    flex: 0 0 auto;
  } /* hugs content along flex direction */

  /* Cross-axis Fill/Hug */
  .fill-cross {
    align-self: stretch;
  } /* fills perpendicular direction */
  .hug-cross {
    align-self: flex-start;
  } /* hugs content perpendicular direction */

  /* Compound shorthands for convenience */
  .fill {
    flex: 1 1 auto;
    align-self: stretch;
  }
  .hug {
    flex: 0 0 auto;
    align-self: flex-start;
  }

  /* === TEXT COLORS === */
  .text-fg {
    color: var(--color-fg);
  }
  .text-border {
    color: var(--color-border);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-secondary {
    color: var(--color-secondary);
  }
  .text-accent {
    color: var(--color-accent);
  }
  .text-bg-main {
    color: var(--color-bg-main);
  }
  .text-bg-alt {
    color: var(--color-bg-alt);
  }
  .text-shartreuse {
    color: var(--color-shartreuse);
  }

  /* === BACKGROUND COLORS === */
  .bg-fg {
    background-color: var(--color-fg);
  }
  .bg-border {
    background-color: var(--color-border);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-secondary {
    background-color: var(--color-secondary);
  }
  .bg-accent {
    background-color: var(--color-accent);
  }
  .bg-bg-main {
    background-color: var(--color-bg-main);
  }
  .bg-bg-alt {
    background-color: var(--color-bg-alt);
  }
  .bg-shartreuse {
    background-color: var(--color-shartreuse);
  }

  /* Optional hover helpers */
  .hover-bg-primary:hover {
    background-color: var(--color-primary);
  }
  .hover-bg-secondary:hover {
    background-color: var(--color-secondary);
  }
  .hover-bg-accent:hover {
    background-color: var(--color-accent);
  }

  /* === TEXT SIZES (Semantic, not numeric) === */
  .text-xs {
    font-size: var(--8rpx);
  } /* ~0.5rem — captions, microcopy */
  .text-sm {
    font-size: var(--12rpx, 0.75rem);
  } /* fallback until defined */
  .text-md {
    font-size: var(--16rpx);
  } /* ~1rem — body text */
  .text-lg {
    font-size: var(--24rpx);
  } /* ~1.5rem — subheadings */
  .text-xl {
    font-size: var(--32rpx);
  } /* ~2rem — section headers */
  .text-xxl {
    font-size: var(--48rpx);
  } /* ~3rem — titles, hero */
  .text-hero {
    font-size: var(--64rpx);
  } /* ~4rem — page titles */

  /* === TEXT WEIGHTS === */
  .text-light {
    font-weight: 300;
  }
  .text-regular {
    font-weight: 400;
  }
  .text-bold {
    font-weight: 700;
  }

  /* === TEXT EMPHASIS / ALIGNMENT === */
  .text-muted {
    opacity: 0.7;
  }
  .text-strong {
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .text-left {
    text-align: left;
  }
  .text-center {
    text-align: center;
  }
  .text-right {
    text-align: right;
  }
}
