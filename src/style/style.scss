@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

/* ================================
   style.scss — Canonical Styles Bucket
   Definition: Central SCSS file providing reset, baseline, and application-wide styling.
   Intent: Ensure consistent design, debugging visibility, and final styling authority.
   Constraints:
     - This is the single authoritative styling source.
     - No inline styles in components may override these definitions.
   Inputs: Classnames referenced in React components.
   Outputs: Global and component-specific visual styles.
   ================================ */

/* CSS RESET / BASELINE — Ensures consistent rendering across browsers */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  font-family: sans-serif;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

input,
button,
textarea,
select {
  font: inherit;
}

/* stable/styles/floorplan.scss — global layout with labeled debug colors */

.stage {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  min-height: var(--tile-size, 8rem);
  height: auto;
  max-height: 100%;
  background-color: darksalmon;

  &.solo-mode {
    .actor-tile.solo {
      display: flex;
      flex: 1 1 auto;
      height: auto;
      max-height: 100%;
    }
    .actor-tile.solo ~ .actor-tile {
      display: none;
    }
    .actor-tile:not(.solo) {
      display: none;
    }
  }
}

.actor-tile {
  flex: 0 0 var(--tile-size, 8rem);
  height: var(--tile-size, 8rem);
  min-height: var(--tile-size, 8rem);
  background: #fff;
  border: 1px solid #ccc;
  border-radius: 6px;
  cursor: pointer;
  @include flex-center;

  &.solo {
    flex: 1 1 auto;
    width: 100%;
    height: auto;
    min-height: var(
      --tile-size,
      8rem
    ); // never shrink below original tile height
  }
}
.footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  text-align: left;
  button {
    text-align: right;
  }
}

.floorplan {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-color: #f0f0f0;

  .top-bar {
    height: 60px;
    background-color: #d0eaff;
    @include flex-center;
    flex: 0 0 auto;
    width: 100%;
  }

  .body-row {
    flex: 1;
    display: flex;
    flex-direction: row;
    min-height: 0;
  }

  .left-column {
    flex: 0 0 25%;
    max-width: 25%;
    background-color: #ffe0e0;
    min-width: 0;
    display: flex;
    flex-direction: column;

    .left-column-title {
      height: 40px;
      background-color: #ffcccc;
      @include flex-center;
    }
  }

  .right-column {
    flex: 0 0 25%;
    max-width: 25%;
    background-color: #e0ffe0;
    min-width: 0;
    display: flex;
    flex-direction: column;

    .right-column-title {
      height: 40px;
      background-color: #ccffcc;
      @include flex-center;
    }
  }

  .main-column {
    flex: 1;
    display: flex;
    flex-direction: column;
    background-color: #e0e0ff;
    min-width: 0;

    .page-title-row {
      height: 50px;
      background-color: #ccccff;
      @include flex-center;
      justify-content: space-between;
      padding: 0 1rem;
      flex: 0 0 auto;
    }

    .nav-bar-row {
      flex: 0 0 auto;
      background-color: #99ccff;
      padding: 0.5rem 1rem;
    }

    .nav-bar {
      display: flex;
      flex-direction: row;
      gap: 0.75rem;
      align-items: center;
    }

    .main-content-row {
      display: flex;
      flex: 1 1 0%;
      height: 100%;
      background-color: #eeeeff;
      align-items: flex-start;
      min-height: 0;
    }

    .footer-row {
      height: 50px;
      background-color: #cccccc;
      @include flex-center;
      justify-content: space-between;
      padding: 0 1rem;
      flex: 0 0 auto;
    }
  }
}

.tile {
  border: 1px solid #d5d5d5;
  border-radius: 0.5rem;
  padding: 1.5rem;
  background: #fff;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  transition: transform 0.12s cubic-bezier(0.4, 0, 0.2, 1),
    box-shadow 0.12s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  &:hover {
    transform: translateY(-2px) scale(1.012);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.13);
  }
}

.item-entry {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
  margin: 0.5rem 0;

  input {
    padding: 0.25rem;
    border: 1px solid #ccc;
    border-radius: 4px;
  }

  input[type="text"] {
    width: 8rem;
  }

  input[type="number"] {
    width: 4rem;
  }

  button {
    padding: 0.25rem 0.75rem;
  }
}

.return-items-list {
  display: flex;
  flex-direction: column;
  width: 100%;
  flex: 1 1 0rem;
  gap: 0.75rem;
  padding: 0.75rem;
  align-items: stretch; // children expand full width
  justify-content: flex-start; // align cards at the top
  overflow-y: auto;

  .return-items-card {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    // Remove or override flex so card doesn't stretch/shrink unexpectedly
    // flex: 1 1 0rem;
    width: 100%; // card spans container width
    gap: 1rem;
    padding: 0.75rem 1rem;
    border: 1px solid #ccc;
    border-radius: 6px;
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);

    .item-id {
      font-weight: bold;
      font-size: 1.25rem;
      height: 9rem;
    }
  }

  .catalog-info {
    display: flex;
    align-items: center;
    gap: 0.5rem;

    img {
      width: 40px;
      height: 40px;
      object-fit: contain;
      border: 1px solid #ccc;
      border-radius: 4px;
    }
  }
}

.qty-display {
  font-size: 2rem;
  font-weight: bold;
  height: 100%;
  width: 100%;
  @include flex-center;
}
