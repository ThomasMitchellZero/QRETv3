/* style.scss  |  Simplified + Layered + DRY */
// WE DO NOT use Ui-anything as a prefix.  It is redundant.

/* ─────────── RESET ─────────── */
@layer reset, foundation, components, utilities;

@layer reset {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html,
  body {
    height: 100%;
    font-family: "Comic Sans MS", "Comic Sans", cursive;
    line-height: 1.4;
  }
}

/* ─────────── BASE ─────────── */
@layer foundation {
  :root {
    --rpx-base: 1rem;
    --radius-s: var(--4rpx);
    --radius-m: var(--8rpx);
    --radius-l: var(--12rpx);

    --color-shartreuse: #a2ea2e;
    --color-bg-main: #fff;
    --color-bg-alt: #f4f6fa;
    --color-bg-interactive: #e6f0ff;

    --color-fg: #222;
    --color-border: #ddd;
    --color-primary: #4a90e2;
    --color-interactive: #0072ce;
    --color-interactive-alt: #c2d8ea;
    --color-brand: #012169;
    --color-secondary: #888;
    --color-accent: #f5a623;
    --color-critical: #971b2f;
    --color-success: #007a33;
    --shadow-card: 0 1px 4px rgba(0, 0, 0, 0.1);

    --4rpx: 0.25rem;
    --8rpx: 0.5rem;
    --12rpx: 0.75rem;
    --16rpx: 1rem;
    --20rpx: 1.25rem;
    --24rpx: 1.5rem;
    --32rpx: 2rem;
    --48rpx: 3rem;
    --56rpx: 3.5rem;
    --64rpx: 4rem;
  }

  /* ─────────── TRANSIENT SCOPE ─────────── */
  /* Creates an isolated z-plane while preserving flex behavior */
  .transient-scope {
    flex: 1 1 auto;
    align-items: stretch;
    justify-content: stretch;
  }

  body {
    background-color: var(--color-bg-main);
    color: var(--color-fg);
  }

  h1,
  h2,
  h3 {
    font-weight: 600;
    margin-bottom: calc(var(--rpx-base) * 0.5);
  }

  a {
    color: var(--color-primary);
    text-decoration: none;
  }

  /* H/V containers define direction */
  .hbox {
    display: flex;
    flex-direction: row;
    gap: var(--16rpx);
  }
  .vbox {
    display: flex;
    flex-direction: column;
    gap: var(--16rpx);
  }
}

/* ─────────── COMPONENTS ─────────── */
@layer components {
  .divider-h {
    width: 100%;
    height: 1px;
    background-color: var(--color-border);
    flex-shrink: 0;
  }

  .divider-v {
    width: 1px;
    height: auto;
    background-color: var(--color-border);
    align-self: stretch;
    flex-shrink: 0;
  }

  /* Buttons */
  button {
    flex: 0 0 auto; /* prevents flex parent from stretching the button */
    width: fit-content; /* size exactly to the content + padding */
    display: flex;
    align-items: center;
    justify-content: center;
    padding: calc(var(--rpx-base) * 0.75) calc(var(--rpx-base) * 1.25);
    border-radius: var(--radius-s);
    font-weight: 600;
    background-color: var(--color-shartreuse);
    cursor: pointer;
    transition: 0.2s ease background-color;
    border: none;

    &.btn--primary {
      background-color: var(--color-primary);
      color: white;
    }
    &.btn--secondary {
      background-color: var(--color-interactive-alt);
      color: var(--color-interactive);
    }
    &.btn--outline {
      background-color: white;
      border: 2px solid var(--color-primary);
      color: var(--color-primary);
    }
    &.btn--text {
      background: none;
      color: var(--color-primary);
    }

    &:hover {
      filter: brightness(0.9);
    }
  }

  /* Floorplan Layout */
  .floorplan {
    display: flex;
    flex-direction: column;
    height: 100vh;
    background: var(--color-bg-alt);
    overflow: hidden;

    .column {
      @extend .vbox;
      min-width: 0; /* Prevent overflow in flex children */
      flex: 0 0 25%;
      gap: var(--16rpx);
      border-right: 1px solid var(--color-border);
      overflow-y: auto;
      background-color: var(--color-bg-alt);
      padding: var(--16rpx);
    }

    .main-column {
      flex: 1 1 auto;
      padding: 0rem var(--24rpx);
    }
  }

  /* Card — visually elevated container */
  .card {
    display: flex;
    flex: 0 0 auto;
    gap: var(--16rpx);
    background-color: var(--color-bg-main);
    padding: var(--16rpx); /* CSS modern fix for consistent layout */
    border-radius: var(--radius-l);
    box-shadow: var(--shadow-card);
    padding: var(--16rpx);
  }

  .card-ctnr {
    @extend .vbox;
    flex: 1 1 0rem;
    align-self: stretch;
    gap: var(--16rpx);
    overflow-y: auto;
    scrollbar-gutter: auto;
  }

  .interactor {
    background-color: var(--color-bg-main);
    border: 2px solid var(--color-border);
    border-radius: var(--radius-m);

    transition: opacity 0.15s ease, transform 0.15s ease;
    transform-origin: center top;

    &.active {
      border-color: var(--color-primary);
      background-color: var(--color-bg-interactive);
      box-shadow: var(--shadow-card);
    }
    &:not(.active):hover {
      filter: brightness(0.9);
    }
  }

  .tile {
    @extend .interactor;
    display: flex;
    align-items: stretch;
    justify-content: flex-start;
    padding: var(--8rpx) var(--12rpx);

    flex: 1 1 auto; /* no vertical stretching, width flexible */
    height: auto; /* hug vertical contents always */
    min-height: 4rem; /* ensures tiles never shrink below 4rem */
    align-self: flex-start;
  }

  .stage {
    display: flex;
    flex-direction: column;

    .dialog-shell {
      display: flex;
      flex-direction: column;
      gap: var(--16rpx);
    }
  }

  .actor {
    @extend .tile; // has distinct class as future-proofing
  }

  .dialog {
    @extend .interactor;
    width: fit-content;
    flex-shrink: 1; /* allow flexbox to shrink if needed */
    overflow-wrap: break-word; /* wrap long words instead of clipping */
    background-color: darkkhaki;
  }

  /*  ItemDetailsTile — Horizontal Flex Layout  */
  .product-details {
    @extend .tile;
    flex: 0 0 24rem;
    min-width: 0rem;
    flex-direction: row;
  }

  .product-image {
    flex: 0 0 auto;
    border-radius: var(--radius-s);
    fill-opacity: 100%;
    background-color: green;
    object-fit: cover;
  }
}
/* ─────────── RETURN ITEMS ─────────── */

/* A standard grid template (ASGRT) 

    - Has a resizable column for primary key tiles.
    - Has (n) columns for use by tiles
    - Has a cleanup column for delete button.

    - How to handle appearance of dialogs in relation to their triggering Actors?
    - What is the new row behavior?  What do we need to consider?
    - 

  */

/* ─────────── UTILITIES ─────────── */
@layer utilities {
  .flex {
    display: flex;
  }
  .padding-8rpx {
    padding: var(--8rpx);
  }
  .padding-16rpx {
    padding: var(--16rpx);
  }
  .padding-24rpx {
    padding: var(--24);
  }
  .padding-32rpx {
    padding: var(--32rpx);
  }
  .gap-8rpx {
    gap: var(--8rpx);
  }
  .gap-0rpx {
    gap: 0rem;
  }

  /* Flex Sizing Utilities */
  .flex-grow-max {
    flex: 1 1 auto; /* Grow to fill available space, shrink if needed */
    align-self: stretch; /* Stretch along the cross-axis automatically */
  }

  .flex-grow-min {
    flex: 0 0 auto; /* Stay as small as possible */
    align-self: flex-start; /* Stick to natural size, aligned to start */
  }

  /* Main-axis Fill/Hug */
  .fill-main {
    flex: 1 1 auto;
  } /* fills along flex direction */
  .hug-main {
    flex: 0 0 auto;
  } /* hugs content along flex direction */

  /* Cross-axis Fill/Hug */
  .fill-cross {
    align-self: stretch;
  } /* fills perpendicular direction */
  .hug-cross {
    align-self: flex-start;
  } /* hugs content perpendicular direction */

  /* Compound shorthands for convenience */
  .fill {
    flex: 1 1 auto;
    align-self: stretch;
  }
  .hug {
    flex: 0 0 auto;
    align-self: flex-start;
  }

  /* ---- One-Dimensional Fixed Size ---- */

  /* === TEXT COLORS === */
  .text-fg {
    color: var(--color-fg);
  }
  .text-white {
    color: white;
  }
  .text-border {
    color: var(--color-border);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-secondary {
    color: var(--color-secondary);
  }
  .text-accent {
    color: var(--color-accent);
  }
  .text-critical {
    color: var(--color-critical);
  }
  .text-success {
    color: var(--color-success);
  }
  .text-bg-main {
    color: var(--color-bg-main);
  }
  .text-bg-alt {
    color: var(--color-bg-alt);
  }
  .text-shartreuse {
    color: var(--color-shartreuse);
  }

  /* === BACKGROUND COLORS === */
  .bg-fg {
    background-color: var(--color-fg);
  }
  .bg-border {
    background-color: var(--color-border);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-secondary {
    background-color: var(--color-secondary);
  }
  .bg-accent {
    background-color: var(--color-accent);
  }
  .bg-bg-main {
    background-color: var(--color-bg-main);
  }
  .bg-bg-alt {
    background-color: var(--color-bg-alt);
  }
  .bg-shartreuse {
    background-color: var(--color-shartreuse);
  }
  .bg-brand {
    background-color: var(--color-brand);
  }

  /* Optional hover helpers */
  .hover-bg-primary:hover {
    background-color: var(--color-primary);
  }
  .hover-bg-secondary:hover {
    background-color: var(--color-secondary);
  }
  .hover-bg-accent:hover {
    background-color: var(--color-accent);
  }

  /* === TEXT SIZES (Semantic, not numeric) === */
  /* === TEXT SYSTEM: Coarse + Fine Controls === */
  /* === TEXT SYSTEM: Hybrid rem + em === */
  .text {
    /* ─── Coarse “category” controls (root-anchored via rem) ─── */
    &.micro {
      font-weight: 400;
      letter-spacing: 0.02em;
      font-size: var(--12rpx);
    }

    &.body {
      font-weight: 400;
      font-size: var(--16rpx);
    }

    &.subtitle {
      font-weight: 500;
      line-height: 1.3;
      font-size: var(--20rpx);
    }

    &.title {
      font-weight: 600;
      line-height: 1.2;
      font-size: 1.5rem;
    }

    &.pageTitle {
      font-weight: 700;
      line-height: 1.1;
      font-size: 2rem;
    }

    /* ─── Fine “size” modifiers (relative via em) ─── */

    &.sm {
      font-size: 0.9em;
    }
    &.md {
      font-size: 1em;
    } /* default */
    &.lg {
      font-size: 1.2em;
    }

    /* ─── Optional variants ─── */
    &.light {
      font-weight: 300;
    }
    &.regular {
      font-weight: 400;
    }
    &.bold {
      font-weight: 700;
    }
    &.center {
      text-align: center;
    }
    &.left {
      text-align: left;
    }
    &.right {
      text-align: right;
    }
  }

  .hidden {
    display: none;
  }

  /* Flex alignment utilities */
  .justify-start {
    justify-content: flex-start;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }

  .align-start {
    align-items: flex-start;
  }
  .align-center {
    align-items: center;
  }
  .align-end {
    align-items: flex-end;
  }

  .w-sm {
    width: 8rem;
  }
  .w-md {
    width: 16rem+1rem;
  }
  .w-lg {
    width: 24rem+2rem;
  }

  .h-sm {
    height: 6rem;
  }
  .h-md {
    height: 8rem;
  }
  .h-lg {
    height: 12rem;
  }
}
