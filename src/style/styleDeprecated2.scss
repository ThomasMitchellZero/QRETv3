/* style.scss  |  Simplified + Layered + DRY */
// WE DO NOT use Ui-anything as a prefix.  It is redundant.

/* ─────────── RESET ─────────── */
@layer reset {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html,
  body {
    height: 100%;
    font-family: "Comic Sans MS", "Comic Sans", cursive;
    line-height: 1.4;
  }
}

/* ─────────── BASE ─────────── */
@layer base {
  :root {
    --rpx-base: 1rem;
    --radius-s: 0.25rem;
    --radius-m: 0.5rem;
    --radius-l: 1rem;
    --color-bg: #fafafa;
    --color-fg: #222;
    --color-border: #ddd;
    --color-primary: #4a90e2;
    --color-secondary: #888;
    --color-accent: #f5a623;
    --shadow-card: 0 1px 4px rgba(0, 0, 0, 0.1);

    --4rpx: 0.25rem;
    --8rpx: 0.5rem;
    --16rpx: 1rem;
    --24rpx: 1.5rem;
    --32rpx: 2rem;
    --48rpx: 3rem;
    --64rpx: 4rem;
    --128rpx: 8rem;
    --160rpx: 10rem;
    --192rpx: 12rem;
    --256rpx: 16rem;
  }

  body {
    background-color: var(--color-bg);
    color: var(--color-fg);
  }

  h1,
  h2,
  h3 {
    font-weight: 600;
    margin-bottom: calc(var(--rpx-base) * 0.5);
  }

  a {
    color: var(--color-primary);
    text-decoration: none;
  }

  .h-box {
    display: flex;
    flex-direction: row;
    gap: var(--16rpx);
  }

  .v-box {
    display: flex;
    flex-direction: column;
    gap: var(--16rpx);
  }
}

/* ─────────── COMPONENTS ─────────── */
@layer components {
  /* Mixins */
  @mixin card {
    background: white;
    border: 1px solid var(--color-border);
    border-radius: var(--radius-m);
    box-shadow: var(--shadow-card);
  }

  .ecosystem-bar {
    /* REMOVE position: fixed, top, left, z-index */
    height: 2.5rem;
    width: 100%;
    background: var(--color-primary);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    letter-spacing: 0.05em;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    flex-shrink: 0; // ensures it stays visible even when main scrolls
  }

  /* Navbar */
  .navbar {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    padding: calc(var(--rpx-base) * 1);
  }

  /* Buttons */
  .button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: calc(var(--rpx-base) * 0.75) calc(var(--rpx-base) * 1.25);
    border-radius: var(--radius-s);
    font-weight: 600;
    cursor: pointer;
    transition: 0.2s ease background-color;
    border: none;
  }

  .button--primary {
    background: var(--color-primary);
    color: white;
  }
  .button--secondary {
    background: var(--color-secondary);
    color: white;
  }
  .button--outline {
    background: none;
    border: 2px solid var(--color-primary);
    color: var(--color-primary);
  }
  .button--text {
    background: none;
    color: var(--color-primary);
  }

  /* Tiles & Cards */
  .tile,
  .card {
    @include card;
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    padding: calc(var(--rpx-base) * 1);
    flex-direction: row;
    justify-content: flex-start;
  }

  .item-tile {
    display: flex;
    gap: calc(var(--rpx-base) * 1);
    align-items: flex-start;
    flex-direction: row;

    img {
      width: 6rem;
      height: 6rem;
      object-fit: cover;
      border-radius: var(--radius-s);
    }

    .info {
      display: flex;
      flex-direction: column;
      justify-content: center;
    }
  }
  /* Floorplan Layout */
  .floorplan {
    display: flex;
    flex-direction: column;
    height: 100vh;
    background: var(--color-bg);
    overflow: hidden;
  }

  .body-row {
    flex: 1 1 0rem;
    min-height: 0;
    display: flex;
    /* Do not scroll here */
    overflow: hidden;
  }

  .left-column,
  .right-column {
    width: 20%;
    background: #f7f7f7;
    border-right: 1px solid var(--color-border);
    /* Do not scroll here */
    padding: 1rem;
    gap: 1rem;
  }

  .right-column {
    border-left: 1px solid var(--color-border);
    border-right: none;
  }

  .main-column {
    flex: 1;
    display: flex;
    flex-direction: column;
    /* Do not scroll here */
    overflow: hidden;
    min-height: 0;
  }

  .page-title-row,
  .footer-row {
    display: flex;
    flex-direction: row;
    padding: 1rem;
    background: white;
    border-bottom: 1px solid var(--color-border);
  }

  .main-content-row {
    flex: 1 1 0rem;
    overflow-y: auto;
    padding: 1rem;
    gap: 1rem;
    flex: 1 1 auto;
    min-height: 0;
  }

  /* Stage / ActorTile */
  .stage {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    flex: 1;
  }

  .actor-tile {
    @include card;
    cursor: pointer;
    transition: transform 0.2s ease;

    /* Create 3 fixed widths 
    -The longest should be the sum of the two smaller ones + gap
    -Second longest plus shortest plus gap === third longest
    */
  }

  .actor-tile.solo {
    transform: scale(1.02);
    border: 2px solid var(--color-accent);
  }

  .actor-headline {
    font-weight: bold;
    margin-bottom: 0.25rem;
  }

  .actor-content {
    padding-top: 0.5rem;
  }

  /* ItemDetailsTile — Horizontal Flex Layout */
  .item-details-tile {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    @include card;
    width: 100%;
    max-width: 600px;
    flex: 0 0 25%;
  }

  .item-details__image {
    flex: 0 0 auto;

    img {
      width: 96px;
      height: 96px;
      border-radius: var(--radius-s);
      object-fit: cover;
      box-shadow: var(--shadow-card);
    }
  }

  .item-details__info {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 0.25rem;
    flex: 1 1 auto;

    /* Chat.  Read the directions.  Nothing starts with ui-, ever in SCSS.*/
    .item-details__title {
      font-weight: bold;
      font-size: 1rem;
    }

    .item-details__price {
      color: var(--color-primary);
      font-weight: 600;
    }

    .item-details__id {
      font-size: 0.85rem;
      color: var(--color-secondary);
    }
  }

  /* ─────────── RETURN ITEMS ─────────── */
  .return-items-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
    overflow-y: auto; // this is the main scrollable region
  }

  .return-items-card {
    display: flex;
    flex-direction: row;
    gap: 1rem;
    padding: 1rem;
    background: white;
    border-radius: var(--radius-m);
    box-shadow: var(--shadow-card);
    border: 1px solid var(--color-border);
    min-height: 8rem;

    .stage {
      flex: 1 1 auto;
      display: flex;
      flex-direction: row;
      gap: 1rem;
    }

    button[aria-label="Remove item"] {
      flex: 0 0 128px;
      height: 128px;
      justify-self: flex-end;
    }
  }

  /* Refund Details */
  .refund-details {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 0.5rem 0;
  }

  .refund-section {
    border-top: 1px solid var(--color-border);
    padding-top: 0.5rem;
  }

  .refund-label {
    font-weight: bold;
    color: var(--color-secondary);
    margin-bottom: 0.25rem;
  }

  .refund-breakdown div {
    font-size: 0.9rem;
  }

  .refund-no-receipts {
    color: #999;
    font-style: italic;
  }

  /* Footer */
  .footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem;
    border-top: 1px solid var(--color-border);
    background: #fff;
  }
}

/* ─────────── UTILITIES ─────────── */
@layer utilities {
  .flex {
    display: flex;
  }
  .flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .text-center {
    text-align: center;
  }

  .padding-8rpx {
    padding: var(--8rpx);
  }
  .padding-16rpx {
    padding: var(--16rpx);
  }
  .padding-24rpx {
    padding: var(--24);
  }
  .padding-32rpx {
    padding: var(--32rpx);
  }

  .gap-8rpx {
    gap: var(--8rpx);
  }
}

/* Trash Button for Remove Item */
button[aria-label="Remove item"] {
  width: 128px;
  height: 128px;
  font-size: 2rem;
  border: none;
  background: none;
  cursor: pointer;
  transition: transform 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
}
button[aria-label="Remove item"]:hover {
  transform: scale(1.1);
}
